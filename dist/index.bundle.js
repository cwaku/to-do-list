(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"body {\n  background-color: #fff;\n}\n\n.container {\n  margin: 10% 25% 0 25%;\n  padding: 20px 0 0 0;\n  box-shadow: 3px 3px 5px 0 rgba(0, 0, 0, 0.75);\n  -webkit-box-shadow: 3px 3px 5px 0 rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 3px 3px 5px 0 rgba(0, 0, 0, 0.75);\n}\n\n.contain {\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid #c9bebeab;\n  padding-bottom: 5px;\n}\n\n.iconed,\n.sub-icon {\n  padding-right: 10px;\n  cursor: pointer;\n}\n\n.sub-icon:hover {\n  font-size: 20px;\n  color: aqua;\n}\n\n.heading {\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 20px;\n  border-bottom: 1px solid #c9bebeab;\n}\n\n.input {\n  width: 100%;\n}\n\np {\n  outline: none;\n  width: 100%;\n}\n\n.contain-icons {\n  display: flex;\n}\n\n.text {\n  border: 0;\n  text-transform: inherit;\n  font-style: italic;\n  padding: 16px 10px;\n  padding-bottom: 16px;\n  width: 100%;\n  outline: none;\n}\n\n.list {\n  padding: 0;\n}\n\nul li {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2%;\n  border-bottom: 1px solid #c9bebeab;\n}\n\n.strike {\n  text-decoration: line-through;\n  color: #746d6d;\n}\n\n.task {\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n\n.list button {\n  border: 0;\n  background-color: #fff;\n  margin: 16px;\n  font-size: 16px;\n  color: #746d6d;\n}\n\n.icon-d {\n  padding-right: 5px;\n}\n\n.icon-d:hover {\n  color: red;\n  font-size: 20px;\n}\n\n.icons {\n  color: #746d6d;\n}\n\n.icons:hover {\n  cursor: move;\n  color: #000;\n  font-size: 20px;\n}\n\n.clear-all {\n  border: none;\n  background-color: #fff;\n  width: 100%;\n  font-size: 15px;\n  margin-bottom: 10px;\n}\n\n.save {\n  border: none;\n  background-color: #548b3b85;\n  padding: 15px;\n  font-size: 16px;\n  width: 100%;\n}\n\n.save:hover {\n  background-color: #548b3be6;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;AACxB;;AAEA;EACE,qBAAqB;EACrB,mBAAmB;EACnB,6CAA6C;EAC7C,qDAAqD;EACrD,kDAAkD;AACpD;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,kCAAkC;EAClC,mBAAmB;AACrB;;AAEA;;EAEE,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,eAAe;EACf,WAAW;AACb;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,oBAAoB;EACpB,kCAAkC;AACpC;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,WAAW;AACb;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,SAAS;EACT,uBAAuB;EACvB,kBAAkB;EAClB,kBAAkB;EAClB,oBAAoB;EACpB,WAAW;EACX,aAAa;AACf;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,WAAW;EACX,kCAAkC;AACpC;;AAEA;EACE,6BAA6B;EAC7B,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,WAAW;AACb;;AAEA;EACE,SAAS;EACT,sBAAsB;EACtB,YAAY;EACZ,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,UAAU;EACV,eAAe;AACjB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,sBAAsB;EACtB,WAAW;EACX,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,2BAA2B;EAC3B,aAAa;EACb,eAAe;EACf,WAAW;AACb;;AAEA;EACE,2BAA2B;AAC7B",sourcesContent:["body {\n  background-color: #fff;\n}\n\n.container {\n  margin: 10% 25% 0 25%;\n  padding: 20px 0 0 0;\n  box-shadow: 3px 3px 5px 0 rgba(0, 0, 0, 0.75);\n  -webkit-box-shadow: 3px 3px 5px 0 rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 3px 3px 5px 0 rgba(0, 0, 0, 0.75);\n}\n\n.contain {\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid #c9bebeab;\n  padding-bottom: 5px;\n}\n\n.iconed,\n.sub-icon {\n  padding-right: 10px;\n  cursor: pointer;\n}\n\n.sub-icon:hover {\n  font-size: 20px;\n  color: aqua;\n}\n\n.heading {\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 20px;\n  border-bottom: 1px solid #c9bebeab;\n}\n\n.input {\n  width: 100%;\n}\n\np {\n  outline: none;\n  width: 100%;\n}\n\n.contain-icons {\n  display: flex;\n}\n\n.text {\n  border: 0;\n  text-transform: inherit;\n  font-style: italic;\n  padding: 16px 10px;\n  padding-bottom: 16px;\n  width: 100%;\n  outline: none;\n}\n\n.list {\n  padding: 0;\n}\n\nul li {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2%;\n  border-bottom: 1px solid #c9bebeab;\n}\n\n.strike {\n  text-decoration: line-through;\n  color: #746d6d;\n}\n\n.task {\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n\n.list button {\n  border: 0;\n  background-color: #fff;\n  margin: 16px;\n  font-size: 16px;\n  color: #746d6d;\n}\n\n.icon-d {\n  padding-right: 5px;\n}\n\n.icon-d:hover {\n  color: red;\n  font-size: 20px;\n}\n\n.icons {\n  color: #746d6d;\n}\n\n.icons:hover {\n  cursor: move;\n  color: #000;\n  font-size: 20px;\n}\n\n.clear-all {\n  border: none;\n  background-color: #fff;\n  width: 100%;\n  font-size: 15px;\n  margin-bottom: 10px;\n}\n\n.save {\n  border: none;\n  background-color: #548b3b85;\n  padding: 15px;\n  font-size: 16px;\n  width: 100%;\n}\n\n.save:hover {\n  background-color: #548b3be6;\n}\n"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);o&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],A=o.base?s[0]+o.base:s[0],d=a[A]||0,l="".concat(A," ").concat(d);a[A]=d+1;var p=t(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=r(u,o);o.byIndex=c,e.splice(c,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var s=o(n,r),A=0;A<a.length;A++){var d=t(a[A]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e);var o={};(()=>{t.d(o,{j:()=>E});class n{constructor(n,e,t){this.description=n,this.completed=e,this.index=t}listCode(){return`<li data-id="${this.index}"><div data-id="${this.index+1}" class="task"><input class="check-box list-${this.index}" type="checkbox"><p contenteditable="true" class="edit">${this.description}</p></div>\n      <div class="contain-icons"><i class="fas fa-trash-alt icon-d"></i> <i class="fas fa-ellipsis-v icons"></i></div>`}static addTo(n){E.push(n),localStorage.setItem("ToDo",JSON.stringify(E))}static remove(n){E=E.filter((e=>e.index!==Number(n)));for(let n=0;n<E.length;n+=1)E[n].index=n+1;localStorage.setItem("ToDo",JSON.stringify(E))}}var e=t(379),r=t.n(e),a=t(795),i=t.n(a),c=t(569),s=t.n(c),A=t(565),d=t.n(A),l=t(216),p=t.n(l),u=t(589),f=t.n(u),m=t(426),b={};b.styleTagTransform=f(),b.setAttributes=d(),b.insert=s().bind(null,"head"),b.domAPI=i(),b.insertStyleElement=p(),r()(m.Z,b),m.Z&&m.Z.locals&&m.Z.locals;let E=JSON.parse(localStorage.getItem("ToDo"))||[];const x=document.createElement("div");x.className="container";const C=document.createElement("p");C.className="heading",C.textContent="Today's To Do";const g=document.createElement("span");g.innerHTML='<i class="fas fa-sync-alt icons iconed"></i>',C.append(g),x.append(C);const h=document.createElement("div");h.className="contain";const v=document.createElement("div");v.className="input";const y=document.createElement("input");y.placeholder="Add to your list...",y.type="text",y.className="text";const B=document.createElement("div");B.innerHTML='<i class="fas fa-stream sub-icon"></i>',h.append(v),h.append(B),v.append(y),x.append(h);const k=document.createElement("button");k.type="button",k.className="clear-all",k.textContent="Clear all completed",document.body.insertAdjacentElement("afterbegin",x);const w=document.createElement("button");w.className="save",w.textContent="Save edits";const S=document.querySelector(".list");function T(){const e=E.map((e=>new n(e.description,e.completed,e.index).listCode()));S.innerHTML=e.join("");document.querySelectorAll(".check-box").forEach((n=>{n.addEventListener("change",(n=>{!function(n,e){if(n){e.classList.add("strike");const n=e.getAttribute("data-id");for(let e=0;e<E.length;e+=1)E[e].index=e+1,Number(n-1)===E[e].index&&(E[e].completed=!0,localStorage.setItem("ToDo",JSON.stringify(E)))}else{e.classList.remove("strike");const n=e.getAttribute("data-id");for(let e=0;e<E.length;e+=1)Number(n-1)===E[e].index&&(E[e].completed=!1,localStorage.setItem("ToDo",JSON.stringify(E)))}}(n.target.checked,n.target.parentElement)}))})),document.querySelectorAll(".icon-d").forEach((e=>{e.addEventListener("click",(e=>{const t=e.target.parentElement.parentElement.getAttribute("data-id");n.remove(t),T()}))}))}x.append(S),x.append(k),x.append(w),T(),document.addEventListener("DOMContentLoaded",(()=>{document.querySelector(".sub-icon").addEventListener("click",(()=>{const e=document.querySelector(".text"),t=e.value.trim();if(!t)return;let o=0;0===E.length?o=E.length+1:E.length>0&&(o=E[E.length-1].index+1);const r=new n(t,!1,o);n.addTo(r),T(),e.value=""})),document.querySelector(".clear-all").addEventListener("click",(()=>{E=E.filter((n=>!1===n.completed)),T();for(let n=0;n<E.length;n+=1)E[n].index=n+1;localStorage.setItem("ToDo",JSON.stringify(E))})),document.querySelectorAll(".check-box").forEach((n=>{for(let e=0;e<E.length;e+=1)if(!0===E[e].completed){const t=n.parentElement.getAttribute("id");Number(t)===E[e].index&&(n.parentElement.classList.add("strike"),n.checked=!0)}}));const e=document.querySelector(".save");document.querySelectorAll(".edit").forEach((n=>{n.addEventListener("click",(()=>{e.addEventListener("click",(()=>{const e=n.innerHTML;for(let t=0;t<E.length;t+=1){const o=n.parentElement.getAttribute("data-id");Number(o-1)===E[t].index&&(E[t].description=e,localStorage.setItem("ToDo",JSON.stringify(E)))}}))}))}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJ3RkFHSUEsRSxNQUEwQixHQUE0QixLQUUxREEsRUFBd0JDLEtBQUssQ0FBQ0MsRUFBT0MsR0FBSSx1MURBQXcxRCxHQUFHLENBQUMsUUFBVSxFQUFFLFFBQVUsQ0FBQyw2QkFBNkIsTUFBUSxHQUFHLFNBQVcsbzhCQUFvOEIsZUFBaUIsQ0FBQyx3MURBQXcxRCxXQUFhLE1BRTF3SixXLFFDREFELEVBQU9FLFFBQVUsU0FBVUMsR0FDekIsSUFBSUMsRUFBTyxHQTZGWCxPQTNGQUEsRUFBS0MsU0FBVyxXQUNkLE9BQU9DLEtBQUtDLEtBQUksU0FBVUMsR0FDeEIsSUFBSUMsRUFBVSxHQUNWQyxPQUErQixJQUFaRixFQUFLLEdBNEI1QixPQTFCSUEsRUFBSyxLQUNQQyxHQUFXLGNBQWNFLE9BQU9ILEVBQUssR0FBSSxRQUd2Q0EsRUFBSyxLQUNQQyxHQUFXLFVBQVVFLE9BQU9ILEVBQUssR0FBSSxPQUduQ0UsSUFDRkQsR0FBVyxTQUFTRSxPQUFPSCxFQUFLLEdBQUdJLE9BQVMsRUFBSSxJQUFJRCxPQUFPSCxFQUFLLElBQU0sR0FBSSxPQUc1RUMsR0FBV04sRUFBdUJLLEdBRTlCRSxJQUNGRCxHQUFXLEtBR1RELEVBQUssS0FDUEMsR0FBVyxLQUdURCxFQUFLLEtBQ1BDLEdBQVcsS0FHTkEsS0FDTkksS0FBSyxLQUlWVCxFQUFLVSxFQUFJLFNBQVdDLEVBQVNDLEVBQU9DLEVBQVFDLEVBQVVDLEdBQzdCLGlCQUFaSixJQUNUQSxFQUFVLENBQUMsQ0FBQyxLQUFNQSxPQUFTSyxLQUc3QixJQUFJQyxFQUF5QixHQUU3QixHQUFJSixFQUNGLElBQUssSUFBSUssRUFBSSxFQUFHQSxFQUFJaEIsS0FBS00sT0FBUVUsSUFBSyxDQUNwQyxJQUFJckIsRUFBS0ssS0FBS2dCLEdBQUcsR0FFUCxNQUFOckIsSUFDRm9CLEVBQXVCcEIsSUFBTSxHQUtuQyxJQUFLLElBQUlzQixFQUFLLEVBQUdBLEVBQUtSLEVBQVFILE9BQVFXLElBQU0sQ0FDMUMsSUFBSWYsRUFBTyxHQUFHRyxPQUFPSSxFQUFRUSxJQUV6Qk4sR0FBVUksRUFBdUJiLEVBQUssV0FJckIsSUFBVlcsU0FDYyxJQUFaWCxFQUFLLEtBR2RBLEVBQUssR0FBSyxTQUFTRyxPQUFPSCxFQUFLLEdBQUdJLE9BQVMsRUFBSSxJQUFJRCxPQUFPSCxFQUFLLElBQU0sR0FBSSxNQUFNRyxPQUFPSCxFQUFLLEdBQUksTUFGL0ZBLEVBQUssR0FBS1csR0FPVkgsSUFDR1IsRUFBSyxJQUdSQSxFQUFLLEdBQUssVUFBVUcsT0FBT0gsRUFBSyxHQUFJLE1BQU1HLE9BQU9ILEVBQUssR0FBSSxLQUMxREEsRUFBSyxHQUFLUSxHQUhWUixFQUFLLEdBQUtRLEdBT1ZFLElBQ0dWLEVBQUssSUFHUkEsRUFBSyxHQUFLLGNBQWNHLE9BQU9ILEVBQUssR0FBSSxPQUFPRyxPQUFPSCxFQUFLLEdBQUksS0FDL0RBLEVBQUssR0FBS1UsR0FIVlYsRUFBSyxHQUFLLEdBQUdHLE9BQU9PLElBT3hCZCxFQUFLTCxLQUFLUyxNQUlQSixJLFFDbEdUSixFQUFPRSxRQUFVLFNBQVVNLEdBQ3pCLElBQUlDLEVBQVVELEVBQUssR0FDZmdCLEVBQWFoQixFQUFLLEdBRXRCLElBQUtnQixFQUNILE9BQU9mLEVBR1QsR0FBb0IsbUJBQVRnQixLQUFxQixDQUM5QixJQUFJQyxFQUFTRCxLQUFLRSxTQUFTQyxtQkFBbUJDLEtBQUtDLFVBQVVOLE1BQ3pETyxFQUFPLCtEQUErRHBCLE9BQU9lLEdBQzdFTSxFQUFnQixPQUFPckIsT0FBT29CLEVBQU0sT0FDcENFLEVBQWFULEVBQVdVLFFBQVEzQixLQUFJLFNBQVU0QixHQUNoRCxNQUFPLGlCQUFpQnhCLE9BQU9hLEVBQVdZLFlBQWMsSUFBSXpCLE9BQU93QixFQUFRLFVBRTdFLE1BQU8sQ0FBQzFCLEdBQVNFLE9BQU9zQixHQUFZdEIsT0FBTyxDQUFDcUIsSUFBZ0JuQixLQUFLLE1BR25FLE1BQU8sQ0FBQ0osR0FBU0ksS0FBSyxRLFFDbEJ4QixJQUFJd0IsRUFBYyxHQUVsQixTQUFTQyxFQUFxQkMsR0FHNUIsSUFGQSxJQUFJQyxHQUFVLEVBRUwxQixFQUFJLEVBQUdBLEVBQUl1QixFQUFZekIsT0FBUUUsSUFDdEMsR0FBSXVCLEVBQVl2QixHQUFHeUIsYUFBZUEsRUFBWSxDQUM1Q0MsRUFBUzFCLEVBQ1QsTUFJSixPQUFPMEIsRUFHVCxTQUFTQyxFQUFhckMsRUFBTXNDLEdBSTFCLElBSEEsSUFBSUMsRUFBYSxHQUNiQyxFQUFjLEdBRVQ5QixFQUFJLEVBQUdBLEVBQUlWLEVBQUtRLE9BQVFFLElBQUssQ0FDcEMsSUFBSU4sRUFBT0osRUFBS1UsR0FDWmIsRUFBS3lDLEVBQVFHLEtBQU9yQyxFQUFLLEdBQUtrQyxFQUFRRyxLQUFPckMsRUFBSyxHQUNsRHNDLEVBQVFILEVBQVcxQyxJQUFPLEVBQzFCc0MsRUFBYSxHQUFHNUIsT0FBT1YsRUFBSSxLQUFLVSxPQUFPbUMsR0FDM0NILEVBQVcxQyxHQUFNNkMsRUFBUSxFQUN6QixJQUFJQyxFQUFvQlQsRUFBcUJDLEdBQ3pDUyxFQUFNLENBQ1JDLElBQUt6QyxFQUFLLEdBQ1ZRLE1BQU9SLEVBQUssR0FDWjBDLFVBQVcxQyxFQUFLLEdBQ2hCVSxTQUFVVixFQUFLLEdBQ2ZXLE1BQU9YLEVBQUssSUFHZCxJQUEyQixJQUF2QnVDLEVBQ0ZWLEVBQVlVLEdBQW1CSSxhQUMvQmQsRUFBWVUsR0FBbUJLLFFBQVFKLE9BQ2xDLENBQ0wsSUFBSUksRUFBVUMsRUFBZ0JMLEVBQUtOLEdBQ25DQSxFQUFRWSxRQUFVeEMsRUFDbEJ1QixFQUFZa0IsT0FBT3pDLEVBQUcsRUFBRyxDQUN2QnlCLFdBQVlBLEVBQ1phLFFBQVNBLEVBQ1RELFdBQVksSUFJaEJQLEVBQVk3QyxLQUFLd0MsR0FHbkIsT0FBT0ssRUFHVCxTQUFTUyxFQUFnQkwsRUFBS04sR0FDNUIsSUFBSWMsRUFBTWQsRUFBUWUsT0FBT2YsR0FlekIsT0FkQWMsRUFBSUUsT0FBT1YsR0FFRyxTQUFpQlcsR0FDN0IsR0FBSUEsRUFBUSxDQUNWLEdBQUlBLEVBQU9WLE1BQVFELEVBQUlDLEtBQU9VLEVBQU8zQyxRQUFVZ0MsRUFBSWhDLE9BQVMyQyxFQUFPVCxZQUFjRixFQUFJRSxXQUFhUyxFQUFPekMsV0FBYThCLEVBQUk5QixVQUFZeUMsRUFBT3hDLFFBQVU2QixFQUFJN0IsTUFDekosT0FHRnFDLEVBQUlFLE9BQU9WLEVBQU1XLFFBRWpCSCxFQUFJSSxVQU9WNUQsRUFBT0UsUUFBVSxTQUFVRSxFQUFNc0MsR0FHL0IsSUFBSW1CLEVBQWtCcEIsRUFEdEJyQyxFQUFPQSxHQUFRLEdBRGZzQyxFQUFVQSxHQUFXLElBR3JCLE9BQU8sU0FBZ0JvQixHQUNyQkEsRUFBVUEsR0FBVyxHQUVyQixJQUFLLElBQUloRCxFQUFJLEVBQUdBLEVBQUkrQyxFQUFnQmpELE9BQVFFLElBQUssQ0FDL0MsSUFDSWlELEVBQVF6QixFQURLdUIsRUFBZ0IvQyxJQUVqQ3VCLEVBQVkwQixHQUFPWixhQUtyQixJQUZBLElBQUlhLEVBQXFCdkIsRUFBYXFCLEVBQVNwQixHQUV0Q3VCLEVBQUssRUFBR0EsRUFBS0osRUFBZ0JqRCxPQUFRcUQsSUFBTSxDQUNsRCxJQUVJQyxFQUFTNUIsRUFGS3VCLEVBQWdCSSxJQUlLLElBQW5DNUIsRUFBWTZCLEdBQVFmLGFBQ3RCZCxFQUFZNkIsR0FBUWQsVUFFcEJmLEVBQVlrQixPQUFPVyxFQUFRLElBSS9CTCxFQUFrQkcsSyxRQ25HdEIsSUFBSUcsRUFBTyxHQW9DWG5FLEVBQU9FLFFBVlAsU0FBMEJrRSxFQUFRQyxHQUNoQyxJQUFJQyxFQXhCTixTQUFtQkEsR0FDakIsUUFBNEIsSUFBakJILEVBQUtHLEdBQXlCLENBQ3ZDLElBQUlDLEVBQWNDLFNBQVNDLGNBQWNILEdBRXpDLEdBQUlJLE9BQU9DLG1CQUFxQkosYUFBdUJHLE9BQU9DLGtCQUM1RCxJQUdFSixFQUFjQSxFQUFZSyxnQkFBZ0JDLEtBQzFDLE1BQU9DLEdBRVBQLEVBQWMsS0FJbEJKLEVBQUtHLEdBQVVDLEVBR2pCLE9BQU9KLEVBQUtHLEdBTUNTLENBQVVYLEdBRXZCLElBQUtFLEVBQ0gsTUFBTSxJQUFJVSxNQUFNLDJHQUdsQlYsRUFBT1csWUFBWVosSyxRQ3pCckJyRSxFQUFPRSxRQVBQLFNBQTRCd0MsR0FDMUIsSUFBSXdDLEVBQVVWLFNBQVNXLGNBQWMsU0FHckMsT0FGQXpDLEVBQVEwQyxjQUFjRixFQUFTeEMsRUFBUTJDLFlBQ3ZDM0MsRUFBUTBCLE9BQU9jLEVBQVN4QyxFQUFRQSxTQUN6QndDLEksY0NJVGxGLEVBQU9FLFFBUlAsU0FBd0NvRixHQUN0QyxJQUFJQyxFQUFtRCxLQUVuREEsR0FDRkQsRUFBYUUsYUFBYSxRQUFTRCxLLFFDOER2Q3ZGLEVBQU9FLFFBWlAsU0FBZ0J3QyxHQUNkLElBQUk0QyxFQUFlNUMsRUFBUStDLG1CQUFtQi9DLEdBQzlDLE1BQU8sQ0FDTGdCLE9BQVEsU0FBZ0JWLElBekQ1QixTQUFlc0MsRUFBYzVDLEVBQVNNLEdBQ3BDLElBQUlDLEVBQU0sR0FFTkQsRUFBSTlCLFdBQ04rQixHQUFPLGNBQWN0QyxPQUFPcUMsRUFBSTlCLFNBQVUsUUFHeEM4QixFQUFJaEMsUUFDTmlDLEdBQU8sVUFBVXRDLE9BQU9xQyxFQUFJaEMsTUFBTyxPQUdyQyxJQUFJTixPQUFpQyxJQUFkc0MsRUFBSTdCLE1BRXZCVCxJQUNGdUMsR0FBTyxTQUFTdEMsT0FBT3FDLEVBQUk3QixNQUFNUCxPQUFTLEVBQUksSUFBSUQsT0FBT3FDLEVBQUk3QixPQUFTLEdBQUksT0FHNUU4QixHQUFPRCxFQUFJQyxJQUVQdkMsSUFDRnVDLEdBQU8sS0FHTEQsRUFBSWhDLFFBQ05pQyxHQUFPLEtBR0xELEVBQUk5QixXQUNOK0IsR0FBTyxLQUdULElBQUlDLEVBQVlGLEVBQUlFLFVBRWhCQSxHQUE2QixvQkFBVHpCLE9BQ3RCd0IsR0FBTyx1REFBdUR0QyxPQUFPYyxLQUFLRSxTQUFTQyxtQkFBbUJDLEtBQUtDLFVBQVVvQixNQUFlLFFBTXRJUixFQUFRZ0Qsa0JBQWtCekMsRUFBS3FDLEVBQWM1QyxFQUFRQSxTQWtCakRpRCxDQUFNTCxFQUFjNUMsRUFBU00sSUFFL0JZLE9BQVEsWUFqQlosU0FBNEIwQixHQUUxQixHQUFnQyxPQUE1QkEsRUFBYU0sV0FDZixPQUFPLEVBR1ROLEVBQWFNLFdBQVdDLFlBQVlQLEdBWWhDUSxDQUFtQlIsTyxRQ2pEekJ0RixFQUFPRSxRQVpQLFNBQTJCK0MsRUFBS3FDLEdBQzlCLEdBQUlBLEVBQWFTLFdBQ2ZULEVBQWFTLFdBQVdDLFFBQVUvQyxNQUM3QixDQUNMLEtBQU9xQyxFQUFhVyxZQUNsQlgsRUFBYU8sWUFBWVAsRUFBYVcsWUFHeENYLEVBQWFMLFlBQVlULFNBQVMwQixlQUFlakQsUUNWakRrRCxFQUEyQixHQUcvQixTQUFTQyxFQUFvQkMsR0FFNUIsSUFBSUMsRUFBZUgsRUFBeUJFLEdBQzVDLFFBQXFCakYsSUFBakJrRixFQUNILE9BQU9BLEVBQWFwRyxRQUdyQixJQUFJRixFQUFTbUcsRUFBeUJFLEdBQVksQ0FDakRwRyxHQUFJb0csRUFFSm5HLFFBQVMsSUFPVixPQUhBcUcsRUFBb0JGLEdBQVVyRyxFQUFRQSxFQUFPRSxRQUFTa0csR0FHL0NwRyxFQUFPRSxRQ3BCZmtHLEVBQW9CSSxFQUFLeEcsSUFDeEIsSUFBSXlHLEVBQVN6RyxHQUFVQSxFQUFPMEcsV0FDN0IsSUFBTzFHLEVBQWlCLFFBQ3hCLElBQU0sRUFFUCxPQURBb0csRUFBb0JPLEVBQUVGLEVBQVEsQ0FBRUcsRUFBR0gsSUFDNUJBLEdDTFJMLEVBQW9CTyxFQUFJLENBQUN6RyxFQUFTMkcsS0FDakMsSUFBSSxJQUFJQyxLQUFPRCxFQUNYVCxFQUFvQlcsRUFBRUYsRUFBWUMsS0FBU1YsRUFBb0JXLEVBQUU3RyxFQUFTNEcsSUFDNUVFLE9BQU9DLGVBQWUvRyxFQUFTNEcsRUFBSyxDQUFFSSxZQUFZLEVBQU1DLElBQUtOLEVBQVdDLE1DSjNFVixFQUFvQlcsRUFBSSxDQUFDL0QsRUFBS29FLElBQVVKLE9BQU9LLFVBQVVDLGVBQWVDLEtBQUt2RSxFQUFLb0UsRyxnQ0NHM0UsTUFBTUksRUFDWEMsWUFBWUMsRUFBYUMsRUFBVzVELEdBQ2xDekQsS0FBS29ILFlBQWNBLEVBQ25CcEgsS0FBS3FILFVBQVlBLEVBQ2pCckgsS0FBS3lELE1BQVFBLEVBS2Y2RCxXQUNFLE1BQU8sZ0JBQWdCdEgsS0FBS3lELHdCQUF3QnpELEtBQUt5RCxNQUFRLGdEQUFnRHpELEtBQUt5RCxpRUFBaUV6RCxLQUFLb0gsZ0pBSTlMRyxhQUFhL0QsR0FDWGdFLEVBQVMvSCxLQUFLK0QsR0FDZGlFLGFBQWFDLFFBQVEsT0FBUW5HLEtBQUtDLFVBQVVnRyxJQUc5Q0QsY0FBY0ksR0FDWkgsRUFBV0EsRUFBU0ksUUFBUUMsR0FBTUEsRUFBRXBFLFFBQVVxRSxPQUFPSCxLQUNyRCxJQUFLLElBQUluSCxFQUFJLEVBQUdBLEVBQUlnSCxFQUFTbEgsT0FBUUUsR0FBSyxFQUN4Q2dILEVBQVNoSCxHQUFHaUQsTUFBUWpELEVBQUksRUFFMUJpSCxhQUFhQyxRQUFRLE9BQVFuRyxLQUFLQyxVQUFVZ0csSyx5SENoQjVDcEYsRUFBVSxHQUVkQSxFQUFRZ0Qsa0JBQW9CLElBQzVCaEQsRUFBUTBDLGNBQWdCLElBRWxCMUMsRUFBUTBCLE9BQVMsU0FBYyxLQUFNLFFBRTNDMUIsRUFBUWUsT0FBUyxJQUNqQmYsRUFBUStDLG1CQUFxQixJQUVoQixJQUFJLElBQVMvQyxHQUtKLEtBQVcsWUFBaUIsV0NyQjNDLElBQUlvRixFQUFXakcsS0FBS3dHLE1BQU1OLGFBQWFPLFFBQVEsVUFBWSxHQUdsRSxNQUFNQyxFQUFNL0QsU0FBU1csY0FBYyxPQUNuQ29ELEVBQUlDLFVBQVksWUFFaEIsTUFBTUMsRUFBVWpFLFNBQVNXLGNBQWMsS0FDdkNzRCxFQUFRRCxVQUFZLFVBQ3BCQyxFQUFRQyxZQUFjLGdCQUN0QixNQUFNQyxFQUFPbkUsU0FBU1csY0FBYyxRQUNwQ3dELEVBQUtDLFVBQVksK0NBQ2pCSCxFQUFRSSxPQUFPRixHQUNmSixFQUFJTSxPQUFPSixHQUVYLE1BQU1LLEVBQVV0RSxTQUFTVyxjQUFjLE9BQ3ZDMkQsRUFBUU4sVUFBWSxVQUNwQixNQUFNTyxFQUFLdkUsU0FBU1csY0FBYyxPQUNsQzRELEVBQUdQLFVBQVksUUFDZixNQUFNUSxFQUFReEUsU0FBU1csY0FBYyxTQUNyQzZELEVBQU1DLFlBQWMsc0JBQ3BCRCxFQUFNRSxLQUFPLE9BQ2JGLEVBQU1SLFVBQVksT0FDbEIsTUFBTVcsRUFBUTNFLFNBQVNXLGNBQWMsT0FDckNnRSxFQUFNUCxVQUFZLHlDQUNsQkUsRUFBUUQsT0FBT0UsR0FDZkQsRUFBUUQsT0FBT00sR0FDZkosRUFBR0YsT0FBT0csR0FDVlQsRUFBSU0sT0FBT0MsR0FFWCxNQUFNTSxFQUFXNUUsU0FBU1csY0FBYyxVQUN4Q2lFLEVBQVNGLEtBQU8sU0FDaEJFLEVBQVNaLFVBQVksWUFDckJZLEVBQVNWLFlBQWMsc0JBQ3ZCbEUsU0FBUzZFLEtBQUtDLHNCQUFzQixhQUFjZixHQUVsRCxNQUFNZ0IsRUFBTy9FLFNBQVNXLGNBQWMsVUFDcENvRSxFQUFLZixVQUFZLE9BQ2pCZSxFQUFLYixZQUFjLGFBRW5CLE1BQU10SSxFQUFPb0UsU0FBU0MsY0FBYyxTQUs3QixTQUFTK0UsSUFDZCxNQUFNQyxFQUFZM0IsRUFBU3ZILEtBQUt1RCxHQUFZLElBQUkwRCxFQUM5QzFELEVBQVE0RCxZQUNSNUQsRUFBUTZELFVBQ1I3RCxFQUFRQyxPQUNSNkQsYUFFRnhILEVBQUt3SSxVQUFZYSxFQUFVNUksS0FBSyxJQUVmMkQsU0FBU2tGLGlCQUFpQixjQzlCdkNDLFNBQVNDLElBQ1hBLEVBQUdDLGlCQUFpQixVQUFXL0UsS0F6QjVCLFNBQW1CZ0YsRUFBT3BDLEdBQy9CLEdBQUlvQyxFQUFPLENBQ1RwQyxFQUFZcUMsVUFBVUMsSUFBSSxVQUMxQixNQUFNakcsRUFBUTJELEVBQVl1QyxhQUFhLFdBQ3ZDLElBQUssSUFBSW5KLEVBQUksRUFBR0EsRUFBSWdILEVBQVNsSCxPQUFRRSxHQUFLLEVBQ3hDZ0gsRUFBU2hILEdBQUdpRCxNQUFRakQsRUFBSSxFQUNwQnNILE9BQU9yRSxFQUFRLEtBQU8rRCxFQUFTaEgsR0FBR2lELFFBQ3BDK0QsRUFBU2hILEdBQUc2RyxXQUFZLEVBQ3hCSSxhQUFhQyxRQUFRLE9BQVFuRyxLQUFLQyxVQUFVZ0csU0FHM0MsQ0FDTEosRUFBWXFDLFVBQVVuRyxPQUFPLFVBQzdCLE1BQU1HLEVBQVEyRCxFQUFZdUMsYUFBYSxXQUN2QyxJQUFLLElBQUluSixFQUFJLEVBQUdBLEVBQUlnSCxFQUFTbEgsT0FBUUUsR0FBSyxFQUNwQ3NILE9BQU9yRSxFQUFRLEtBQU8rRCxFQUFTaEgsR0FBR2lELFFBQ3BDK0QsRUFBU2hILEdBQUc2RyxXQUFZLEVBQ3hCSSxhQUFhQyxRQUFRLE9BQVFuRyxLQUFLQyxVQUFVZ0csTUFZNUNILENBSFk3QyxFQUFFUixPQUFPNEYsUUFDSHBGLEVBQUVSLE9BQU82RixxQkQ4QnJCM0YsU0FBU2tGLGlCQUFpQixXQUNsQ0MsU0FBU0MsSUFDWEEsRUFBR0MsaUJBQWlCLFNBQVUvRSxJQUM1QixNQUFNbUQsRUFBVW5ELEVBQUVSLE9BQU82RixjQUFjQSxjQUFjRixhQUFhLFdBQ2xFekMsRUFBVTVELE9BQU9xRSxHQUNqQnVCLFVBckJOakIsRUFBSU0sT0FBT3pJLEdBQ1htSSxFQUFJTSxPQUFPTyxHQUNYYixFQUFJTSxPQUFPVSxHQXdCWEMsSUFFQWhGLFNBQVNxRixpQkFBaUIsb0JBQW9CLEtBQzFCckYsU0FBU0MsY0FBYyxhQUMvQm9GLGlCQUFpQixTQUFTLEtBQ2xDLE1BQU1PLEVBQVc1RixTQUFTQyxjQUFjLFNBQ2xDaUQsRUFBYzBDLEVBQVNDLE1BQU1DLE9BQ25DLElBQUs1QyxFQUNILE9BR0YsSUFBSXpILEVBQUssRUFDZSxJQUFwQjZILEVBQVNsSCxPQUNYWCxFQUFLNkgsRUFBU2xILE9BQVMsRUFDZGtILEVBQVNsSCxPQUFTLElBQzNCWCxFQUFLNkgsRUFBU0EsRUFBU2xILE9BQVMsR0FBR21ELE1BQVEsR0FHN0MsTUFHTUQsRUFBVSxJQUFJMEQsRUFBVUUsR0FEWixFQUZKekgsR0FJZHVILEVBQVUrQyxNQUFNekcsR0FDaEIwRixJQUNBWSxFQUFTQyxNQUFRLE1BR0k3RixTQUFTQyxjQUFjLGNBQy9Cb0YsaUJBQWlCLFNBQVMsS0FDdkMvQixFQUFXQSxFQUFTSSxRQUFRQyxJQUFzQixJQUFoQkEsRUFBRVIsWUFDcEM2QixJQUNBLElBQUssSUFBSTFJLEVBQUksRUFBR0EsRUFBSWdILEVBQVNsSCxPQUFRRSxHQUFLLEVBQ3hDZ0gsRUFBU2hILEdBQUdpRCxNQUFRakQsRUFBSSxFQUUxQmlILGFBQWFDLFFBQVEsT0FBUW5HLEtBQUtDLFVBQVVnRyxPQUczQnRELFNBQVNrRixpQkFBaUIsY0FDbENDLFNBQVNDLElBQ2xCLElBQUssSUFBSTlJLEVBQUksRUFBR0EsRUFBSWdILEVBQVNsSCxPQUFRRSxHQUFLLEVBQ3hDLElBQThCLElBQTFCZ0gsRUFBU2hILEdBQUc2RyxVQUFvQixDQUNsQyxNQUFNNkMsRUFBU1osRUFBR08sY0FBY0YsYUFBYSxNQUN6QzdCLE9BQU9vQyxLQUFZMUMsRUFBU2hILEdBQUdpRCxRQUNqQzZGLEVBQUdPLGNBQWNKLFVBQVVDLElBQUksVUFDL0JKLEVBQUdNLFNBQVUsT0FPckIsTUFBTU8sRUFBVWpHLFNBQVNDLGNBQWMsU0FDcEJELFNBQVNrRixpQkFBaUIsU0FDbENDLFNBQVNDLElBQ2xCQSxFQUFHQyxpQkFBaUIsU0FBUyxLQUMzQlksRUFBUVosaUJBQWlCLFNBQVMsS0FDaEMsTUFBTWEsRUFBV2QsRUFBR2hCLFVBQ3BCLElBQUssSUFBSTlILEVBQUksRUFBR0EsRUFBSWdILEVBQVNsSCxPQUFRRSxHQUFLLEVBQUcsQ0FDM0MsTUFBTTZKLEVBQVdmLEVBQUdPLGNBQWNGLGFBQWEsV0FDM0M3QixPQUFPdUMsRUFBVyxLQUFPN0MsRUFBU2hILEdBQUdpRCxRQUN2QytELEVBQVNoSCxHQUFHNEcsWUFBY2dELEVBQzFCM0MsYUFBYUMsUUFBUSxPQUFRbkcsS0FBS0MsVUFBVWdHLG1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvLWRvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RvLWRvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90by1kby1saXN0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvLWRvLWxpc3Qvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvLWRvLWxpc3Qvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90by1kby1saXN0Ly4vc3JjL2FkZFJlbW92ZS5qcyIsIndlYnBhY2s6Ly90by1kby1saXN0Ly4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL3RvLWRvLWxpc3QvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL3NyYy9zdGF0dXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJib2R5IHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxufVxcblxcbi5jb250YWluZXIge1xcbiAgbWFyZ2luOiAxMCUgMjUlIDAgMjUlO1xcbiAgcGFkZGluZzogMjBweCAwIDAgMDtcXG4gIGJveC1zaGFkb3c6IDNweCAzcHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjc1KTtcXG4gIC13ZWJraXQtYm94LXNoYWRvdzogM3B4IDNweCA1cHggMCByZ2JhKDAsIDAsIDAsIDAuNzUpO1xcbiAgLW1vei1ib3gtc2hhZG93OiAzcHggM3B4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC43NSk7XFxufVxcblxcbi5jb250YWluIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2M5YmViZWFiO1xcbiAgcGFkZGluZy1ib3R0b206IDVweDtcXG59XFxuXFxuLmljb25lZCxcXG4uc3ViLWljb24ge1xcbiAgcGFkZGluZy1yaWdodDogMTBweDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLnN1Yi1pY29uOmhvdmVyIHtcXG4gIGZvbnQtc2l6ZTogMjBweDtcXG4gIGNvbG9yOiBhcXVhO1xcbn1cXG5cXG4uaGVhZGluZyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2M5YmViZWFiO1xcbn1cXG5cXG4uaW5wdXQge1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbnAge1xcbiAgb3V0bGluZTogbm9uZTtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4uY29udGFpbi1pY29ucyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbn1cXG5cXG4udGV4dCB7XFxuICBib3JkZXI6IDA7XFxuICB0ZXh0LXRyYW5zZm9ybTogaW5oZXJpdDtcXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcXG4gIHBhZGRpbmc6IDE2cHggMTBweDtcXG4gIHBhZGRpbmctYm90dG9tOiAxNnB4O1xcbiAgd2lkdGg6IDEwMCU7XFxuICBvdXRsaW5lOiBub25lO1xcbn1cXG5cXG4ubGlzdCB7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG5cXG51bCBsaSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHBhZGRpbmc6IDIlO1xcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjOWJlYmVhYjtcXG59XFxuXFxuLnN0cmlrZSB7XFxuICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcXG4gIGNvbG9yOiAjNzQ2ZDZkO1xcbn1cXG5cXG4udGFzayB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4ubGlzdCBidXR0b24ge1xcbiAgYm9yZGVyOiAwO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gIG1hcmdpbjogMTZweDtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG4gIGNvbG9yOiAjNzQ2ZDZkO1xcbn1cXG5cXG4uaWNvbi1kIHtcXG4gIHBhZGRpbmctcmlnaHQ6IDVweDtcXG59XFxuXFxuLmljb24tZDpob3ZlciB7XFxuICBjb2xvcjogcmVkO1xcbiAgZm9udC1zaXplOiAyMHB4O1xcbn1cXG5cXG4uaWNvbnMge1xcbiAgY29sb3I6ICM3NDZkNmQ7XFxufVxcblxcbi5pY29uczpob3ZlciB7XFxuICBjdXJzb3I6IG1vdmU7XFxuICBjb2xvcjogIzAwMDtcXG4gIGZvbnQtc2l6ZTogMjBweDtcXG59XFxuXFxuLmNsZWFyLWFsbCB7XFxuICBib3JkZXI6IG5vbmU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBmb250LXNpemU6IDE1cHg7XFxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcbn1cXG5cXG4uc2F2ZSB7XFxuICBib3JkZXI6IG5vbmU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTQ4YjNiODU7XFxuICBwYWRkaW5nOiAxNXB4O1xcbiAgZm9udC1zaXplOiAxNnB4O1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5zYXZlOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM1NDhiM2JlNjtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixtQkFBbUI7RUFDbkIsNkNBQTZDO0VBQzdDLHFEQUFxRDtFQUNyRCxrREFBa0Q7QUFDcEQ7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLGtDQUFrQztFQUNsQyxtQkFBbUI7QUFDckI7O0FBRUE7O0VBRUUsbUJBQW1CO0VBQ25CLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsV0FBVztBQUNiOztBQUVBO0VBQ0UsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixvQkFBb0I7RUFDcEIsa0NBQWtDO0FBQ3BDOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFNBQVM7RUFDVCx1QkFBdUI7RUFDdkIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFDcEIsV0FBVztFQUNYLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxrQ0FBa0M7QUFDcEM7O0FBRUE7RUFDRSw2QkFBNkI7RUFDN0IsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsV0FBVztBQUNiOztBQUVBO0VBQ0UsU0FBUztFQUNULHNCQUFzQjtFQUN0QixZQUFZO0VBQ1osZUFBZTtFQUNmLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osV0FBVztFQUNYLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osc0JBQXNCO0VBQ3RCLFdBQVc7RUFDWCxlQUFlO0VBQ2YsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLDJCQUEyQjtFQUMzQixhQUFhO0VBQ2IsZUFBZTtFQUNmLFdBQVc7QUFDYjs7QUFFQTtFQUNFLDJCQUEyQjtBQUM3QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJib2R5IHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxufVxcblxcbi5jb250YWluZXIge1xcbiAgbWFyZ2luOiAxMCUgMjUlIDAgMjUlO1xcbiAgcGFkZGluZzogMjBweCAwIDAgMDtcXG4gIGJveC1zaGFkb3c6IDNweCAzcHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjc1KTtcXG4gIC13ZWJraXQtYm94LXNoYWRvdzogM3B4IDNweCA1cHggMCByZ2JhKDAsIDAsIDAsIDAuNzUpO1xcbiAgLW1vei1ib3gtc2hhZG93OiAzcHggM3B4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC43NSk7XFxufVxcblxcbi5jb250YWluIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2M5YmViZWFiO1xcbiAgcGFkZGluZy1ib3R0b206IDVweDtcXG59XFxuXFxuLmljb25lZCxcXG4uc3ViLWljb24ge1xcbiAgcGFkZGluZy1yaWdodDogMTBweDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLnN1Yi1pY29uOmhvdmVyIHtcXG4gIGZvbnQtc2l6ZTogMjBweDtcXG4gIGNvbG9yOiBhcXVhO1xcbn1cXG5cXG4uaGVhZGluZyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2M5YmViZWFiO1xcbn1cXG5cXG4uaW5wdXQge1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbnAge1xcbiAgb3V0bGluZTogbm9uZTtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4uY29udGFpbi1pY29ucyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbn1cXG5cXG4udGV4dCB7XFxuICBib3JkZXI6IDA7XFxuICB0ZXh0LXRyYW5zZm9ybTogaW5oZXJpdDtcXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcXG4gIHBhZGRpbmc6IDE2cHggMTBweDtcXG4gIHBhZGRpbmctYm90dG9tOiAxNnB4O1xcbiAgd2lkdGg6IDEwMCU7XFxuICBvdXRsaW5lOiBub25lO1xcbn1cXG5cXG4ubGlzdCB7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG5cXG51bCBsaSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHBhZGRpbmc6IDIlO1xcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjOWJlYmVhYjtcXG59XFxuXFxuLnN0cmlrZSB7XFxuICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcXG4gIGNvbG9yOiAjNzQ2ZDZkO1xcbn1cXG5cXG4udGFzayB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4ubGlzdCBidXR0b24ge1xcbiAgYm9yZGVyOiAwO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gIG1hcmdpbjogMTZweDtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG4gIGNvbG9yOiAjNzQ2ZDZkO1xcbn1cXG5cXG4uaWNvbi1kIHtcXG4gIHBhZGRpbmctcmlnaHQ6IDVweDtcXG59XFxuXFxuLmljb24tZDpob3ZlciB7XFxuICBjb2xvcjogcmVkO1xcbiAgZm9udC1zaXplOiAyMHB4O1xcbn1cXG5cXG4uaWNvbnMge1xcbiAgY29sb3I6ICM3NDZkNmQ7XFxufVxcblxcbi5pY29uczpob3ZlciB7XFxuICBjdXJzb3I6IG1vdmU7XFxuICBjb2xvcjogIzAwMDtcXG4gIGZvbnQtc2l6ZTogMjBweDtcXG59XFxuXFxuLmNsZWFyLWFsbCB7XFxuICBib3JkZXI6IG5vbmU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBmb250LXNpemU6IDE1cHg7XFxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcbn1cXG5cXG4uc2F2ZSB7XFxuICBib3JkZXI6IG5vbmU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTQ4YjNiODU7XFxuICBwYWRkaW5nOiAxNXB4O1xcbiAgZm9udC1zaXplOiAxNnB4O1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5zYXZlOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM1NDhiM2JlNjtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLyogZXNsaW50LWRpc2FibGUgKi9cbmltcG9ydCB7IHRvRG9MaXN0IH0gZnJvbSAnLi9pbmRleC5qcyc7XG5cbmV4cG9ydCBjbGFzcyBUb0RvQ2xhc3Mge1xuICBjb25zdHJ1Y3RvcihkZXNjcmlwdGlvbiwgY29tcGxldGVkLCBpbmRleCkge1xuICAgIHRoaXMuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgICB0aGlzLmNvbXBsZXRlZCA9IGNvbXBsZXRlZDtcbiAgICB0aGlzLmluZGV4ID0gaW5kZXg7XG4gIH1cblxuICAvKiBlc2xpbnQtZW5hYmxlICovXG5cbiAgbGlzdENvZGUoKSB7XG4gICAgcmV0dXJuIGA8bGkgZGF0YS1pZD1cIiR7dGhpcy5pbmRleH1cIj48ZGl2IGRhdGEtaWQ9XCIke3RoaXMuaW5kZXggKyAxfVwiIGNsYXNzPVwidGFza1wiPjxpbnB1dCBjbGFzcz1cImNoZWNrLWJveCBsaXN0LSR7dGhpcy5pbmRleH1cIiB0eXBlPVwiY2hlY2tib3hcIj48cCBjb250ZW50ZWRpdGFibGU9XCJ0cnVlXCIgY2xhc3M9XCJlZGl0XCI+JHt0aGlzLmRlc2NyaXB0aW9ufTwvcD48L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjb250YWluLWljb25zXCI+PGkgY2xhc3M9XCJmYXMgZmEtdHJhc2gtYWx0IGljb24tZFwiPjwvaT4gPGkgY2xhc3M9XCJmYXMgZmEtZWxsaXBzaXMtdiBpY29uc1wiPjwvaT48L2Rpdj5gO1xuICB9XG5cbiAgc3RhdGljIGFkZFRvKG5ld0xpc3QpIHtcbiAgICB0b0RvTGlzdC5wdXNoKG5ld0xpc3QpO1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdUb0RvJywgSlNPTi5zdHJpbmdpZnkodG9Eb0xpc3QpKTtcbiAgfVxuXG4gIHN0YXRpYyByZW1vdmUob2xkTGlzdCkge1xuICAgIHRvRG9MaXN0ID0gdG9Eb0xpc3QuZmlsdGVyKCh4KSA9PiB4LmluZGV4ICE9PSBOdW1iZXIob2xkTGlzdCkpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdG9Eb0xpc3QubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHRvRG9MaXN0W2ldLmluZGV4ID0gaSArIDE7XG4gICAgfVxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdUb0RvJywgSlNPTi5zdHJpbmdpZnkodG9Eb0xpc3QpKTtcbiAgfVxufVxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiLyogZXNsaW50LWRpc2FibGUgKi9cbmltcG9ydCB7IGNoZWNrQm94IH0gZnJvbSAnLi9zdGF0dXMuanMnO1xuaW1wb3J0IHsgVG9Eb0NsYXNzIH0gZnJvbSAnLi9hZGRSZW1vdmUuanMnO1xuaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5cbmV4cG9ydCBsZXQgdG9Eb0xpc3QgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdUb0RvJykpIHx8IFtdO1xuLyogZXNsaW50LWVuYWJsZSAqL1xuXG5jb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbmRpdi5jbGFzc05hbWUgPSAnY29udGFpbmVyJztcblxuY29uc3QgaGVhZGluZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbmhlYWRpbmcuY2xhc3NOYW1lID0gJ2hlYWRpbmcnO1xuaGVhZGluZy50ZXh0Q29udGVudCA9ICdUb2RheVxcJ3MgVG8gRG8nO1xuY29uc3Qgc3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbnNwYW4uaW5uZXJIVE1MID0gJzxpIGNsYXNzPVwiZmFzIGZhLXN5bmMtYWx0IGljb25zIGljb25lZFwiPjwvaT4nO1xuaGVhZGluZy5hcHBlbmQoc3Bhbik7XG5kaXYuYXBwZW5kKGhlYWRpbmcpO1xuXG5jb25zdCBjb250YWluID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5jb250YWluLmNsYXNzTmFtZSA9ICdjb250YWluJztcbmNvbnN0IG1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5tZS5jbGFzc05hbWUgPSAnaW5wdXQnO1xuY29uc3QgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuaW5wdXQucGxhY2Vob2xkZXIgPSAnQWRkIHRvIHlvdXIgbGlzdC4uLic7XG5pbnB1dC50eXBlID0gJ3RleHQnO1xuaW5wdXQuY2xhc3NOYW1lID0gJ3RleHQnO1xuY29uc3Qgc3BhbjEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbnNwYW4xLmlubmVySFRNTCA9ICc8aSBjbGFzcz1cImZhcyBmYS1zdHJlYW0gc3ViLWljb25cIj48L2k+JztcbmNvbnRhaW4uYXBwZW5kKG1lKTtcbmNvbnRhaW4uYXBwZW5kKHNwYW4xKTtcbm1lLmFwcGVuZChpbnB1dCk7XG5kaXYuYXBwZW5kKGNvbnRhaW4pO1xuXG5jb25zdCBjbGVhckJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuY2xlYXJCdG4udHlwZSA9ICdidXR0b24nO1xuY2xlYXJCdG4uY2xhc3NOYW1lID0gJ2NsZWFyLWFsbCc7XG5jbGVhckJ0bi50ZXh0Q29udGVudCA9ICdDbGVhciBhbGwgY29tcGxldGVkJztcbmRvY3VtZW50LmJvZHkuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KCdhZnRlcmJlZ2luJywgZGl2KTtcblxuY29uc3Qgc2F2ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuc2F2ZS5jbGFzc05hbWUgPSAnc2F2ZSc7XG5zYXZlLnRleHRDb250ZW50ID0gJ1NhdmUgZWRpdHMnO1xuXG5jb25zdCBsaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmxpc3QnKTtcbmRpdi5hcHBlbmQobGlzdCk7XG5kaXYuYXBwZW5kKGNsZWFyQnRuKTtcbmRpdi5hcHBlbmQoc2F2ZSk7XG5cbmV4cG9ydCBmdW5jdGlvbiBzaG93TGlzdCgpIHtcbiAgY29uc3QgbGlzdHNDb2RlID0gdG9Eb0xpc3QubWFwKChuZXdMaXN0KSA9PiBuZXcgVG9Eb0NsYXNzKFxuICAgIG5ld0xpc3QuZGVzY3JpcHRpb24sXG4gICAgbmV3TGlzdC5jb21wbGV0ZWQsXG4gICAgbmV3TGlzdC5pbmRleCxcbiAgKS5saXN0Q29kZSgpKTtcblxuICBsaXN0LmlubmVySFRNTCA9IGxpc3RzQ29kZS5qb2luKCcnKTtcblxuICBjb25zdCBjaGVja2JveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jaGVjay1ib3gnKTtcbiAgY2hlY2tCb3goY2hlY2tib3gpO1xuXG4gIGNvbnN0IGJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5pY29uLWQnKTtcbiAgYnRuLmZvckVhY2goKGVsKSA9PiB7XG4gICAgZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgY29uc3Qgb2xkTGlzdCA9IGUudGFyZ2V0LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtaWQnKTsgLy8gZ2V0IHBhcmVudFxuICAgICAgVG9Eb0NsYXNzLnJlbW92ZShvbGRMaXN0KTtcbiAgICAgIHNob3dMaXN0KCk7XG4gICAgfSk7XG4gIH0pO1xufVxuXG5zaG93TGlzdCgpO1xuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xuICBjb25zdCBzdWJtaXRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3ViLWljb24nKTtcbiAgc3VibWl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIGNvbnN0IGRlc0lucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRleHQnKTtcbiAgICBjb25zdCBkZXNjcmlwdGlvbiA9IGRlc0lucHV0LnZhbHVlLnRyaW0oKTtcbiAgICBpZiAoIWRlc2NyaXB0aW9uKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbGV0IGlkID0gMDtcbiAgICBpZiAodG9Eb0xpc3QubGVuZ3RoID09PSAwKSB7XG4gICAgICBpZCA9IHRvRG9MaXN0Lmxlbmd0aCArIDE7XG4gICAgfSBlbHNlIGlmICh0b0RvTGlzdC5sZW5ndGggPiAwKSB7XG4gICAgICBpZCA9IHRvRG9MaXN0W3RvRG9MaXN0Lmxlbmd0aCAtIDFdLmluZGV4ICsgMTtcbiAgICB9XG5cbiAgICBjb25zdCBpbmRleCA9IGlkO1xuXG4gICAgY29uc3QgY29tcGxldGVkID0gZmFsc2U7XG4gICAgY29uc3QgbmV3TGlzdCA9IG5ldyBUb0RvQ2xhc3MoZGVzY3JpcHRpb24sIGNvbXBsZXRlZCwgaW5kZXgpO1xuICAgIFRvRG9DbGFzcy5hZGRUbyhuZXdMaXN0KTtcbiAgICBzaG93TGlzdCgpO1xuICAgIGRlc0lucHV0LnZhbHVlID0gJyc7XG4gIH0pO1xuXG4gIGNvbnN0IGNsZWFyQ29tcGxldGVkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNsZWFyLWFsbCcpO1xuICBjbGVhckNvbXBsZXRlZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICB0b0RvTGlzdCA9IHRvRG9MaXN0LmZpbHRlcigoeCkgPT4geC5jb21wbGV0ZWQgPT09IGZhbHNlKTtcbiAgICBzaG93TGlzdCgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdG9Eb0xpc3QubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHRvRG9MaXN0W2ldLmluZGV4ID0gaSArIDE7XG4gICAgfVxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdUb0RvJywgSlNPTi5zdHJpbmdpZnkodG9Eb0xpc3QpKTtcbiAgfSk7XG5cbiAgY29uc3QgaXNDb21wbGV0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jaGVjay1ib3gnKTtcbiAgaXNDb21wbGV0ZS5mb3JFYWNoKChlbCkgPT4ge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdG9Eb0xpc3QubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGlmICh0b0RvTGlzdFtpXS5jb21wbGV0ZWQgPT09IHRydWUpIHtcbiAgICAgICAgY29uc3QgY29tcElkID0gZWwucGFyZW50RWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2lkJyk7XG4gICAgICAgIGlmIChOdW1iZXIoY29tcElkKSA9PT0gdG9Eb0xpc3RbaV0uaW5kZXgpIHtcbiAgICAgICAgICBlbC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3N0cmlrZScpO1xuICAgICAgICAgIGVsLmNoZWNrZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICAvLyBHZXQgZWRpdGVkIHRhc2sgYW5kIHVwZGF0ZSB0byBsb2NhbFN0b3JhZ2VcbiAgY29uc3Qgc2F2ZUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zYXZlJyk7XG4gIGNvbnN0IHBhcmFncmFwaHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZWRpdCcpO1xuICBwYXJhZ3JhcGhzLmZvckVhY2goKGVsKSA9PiB7XG4gICAgZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICBzYXZlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICBjb25zdCBuZXdJbnB1dCA9IGVsLmlubmVySFRNTDtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0b0RvTGlzdC5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgIGNvbnN0IHBhcmVudElkID0gZWwucGFyZW50RWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtaWQnKTtcbiAgICAgICAgICBpZiAoTnVtYmVyKHBhcmVudElkIC0gMSkgPT09IHRvRG9MaXN0W2ldLmluZGV4KSB7XG4gICAgICAgICAgICB0b0RvTGlzdFtpXS5kZXNjcmlwdGlvbiA9IG5ld0lucHV0O1xuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ1RvRG8nLCBKU09OLnN0cmluZ2lmeSh0b0RvTGlzdCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xufSk7IiwiLyogZXNsaW50LWRpc2FibGUgKi9cbmltcG9ydCB7IHRvRG9MaXN0IH0gZnJvbSAnLi9pbmRleC5qcyc7XG4vKiBlc2xpbnQtZW5hYmxlICovXG5cbmV4cG9ydCBmdW5jdGlvbiBjb21wbGV0ZWQoc3RhdGUsIGRlc2NyaXB0aW9uKSB7XG4gIGlmIChzdGF0ZSkge1xuICAgIGRlc2NyaXB0aW9uLmNsYXNzTGlzdC5hZGQoJ3N0cmlrZScpO1xuICAgIGNvbnN0IGluZGV4ID0gZGVzY3JpcHRpb24uZ2V0QXR0cmlidXRlKCdkYXRhLWlkJyk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0b0RvTGlzdC5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgdG9Eb0xpc3RbaV0uaW5kZXggPSBpICsgMTtcbiAgICAgIGlmIChOdW1iZXIoaW5kZXggLSAxKSA9PT0gdG9Eb0xpc3RbaV0uaW5kZXgpIHtcbiAgICAgICAgdG9Eb0xpc3RbaV0uY29tcGxldGVkID0gdHJ1ZTtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ1RvRG8nLCBKU09OLnN0cmluZ2lmeSh0b0RvTGlzdCkpO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBkZXNjcmlwdGlvbi5jbGFzc0xpc3QucmVtb3ZlKCdzdHJpa2UnKTtcbiAgICBjb25zdCBpbmRleCA9IGRlc2NyaXB0aW9uLmdldEF0dHJpYnV0ZSgnZGF0YS1pZCcpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdG9Eb0xpc3QubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGlmIChOdW1iZXIoaW5kZXggLSAxKSA9PT0gdG9Eb0xpc3RbaV0uaW5kZXgpIHtcbiAgICAgICAgdG9Eb0xpc3RbaV0uY29tcGxldGVkID0gZmFsc2U7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdUb0RvJywgSlNPTi5zdHJpbmdpZnkodG9Eb0xpc3QpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGNoZWNrQm94ID0gKGFycikgPT4ge1xuICBhcnIuZm9yRWFjaCgoZWwpID0+IHtcbiAgICBlbC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoZSkgPT4ge1xuICAgICAgY29uc3Qgc3RhdGUgPSBlLnRhcmdldC5jaGVja2VkO1xuICAgICAgY29uc3QgZGVzY3JpcHRpb24gPSBlLnRhcmdldC5wYXJlbnRFbGVtZW50O1xuICAgICAgaWYgKHN0YXRlID09PSB0cnVlKSB7XG4gICAgICAgIGNvbXBsZXRlZChzdGF0ZSwgZGVzY3JpcHRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29tcGxldGVkKHN0YXRlLCBkZXNjcmlwdGlvbik7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufTtcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiVG9Eb0NsYXNzIiwiY29uc3RydWN0b3IiLCJkZXNjcmlwdGlvbiIsImNvbXBsZXRlZCIsImxpc3RDb2RlIiwic3RhdGljIiwidG9Eb0xpc3QiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwib2xkTGlzdCIsImZpbHRlciIsIngiLCJOdW1iZXIiLCJwYXJzZSIsImdldEl0ZW0iLCJkaXYiLCJjbGFzc05hbWUiLCJoZWFkaW5nIiwidGV4dENvbnRlbnQiLCJzcGFuIiwiaW5uZXJIVE1MIiwiYXBwZW5kIiwiY29udGFpbiIsIm1lIiwiaW5wdXQiLCJwbGFjZWhvbGRlciIsInR5cGUiLCJzcGFuMSIsImNsZWFyQnRuIiwiYm9keSIsImluc2VydEFkamFjZW50RWxlbWVudCIsInNhdmUiLCJzaG93TGlzdCIsImxpc3RzQ29kZSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZWwiLCJhZGRFdmVudExpc3RlbmVyIiwic3RhdGUiLCJjbGFzc0xpc3QiLCJhZGQiLCJnZXRBdHRyaWJ1dGUiLCJjaGVja2VkIiwicGFyZW50RWxlbWVudCIsImRlc0lucHV0IiwidmFsdWUiLCJ0cmltIiwiYWRkVG8iLCJjb21wSWQiLCJzYXZlQnRuIiwibmV3SW5wdXQiLCJwYXJlbnRJZCJdLCJzb3VyY2VSb290IjoiIn0=